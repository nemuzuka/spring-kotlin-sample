plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.41'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.41'
}

apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'

group = 'net.jp.vss'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

configurations {
    ktlint
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.google.guava:guava:27.1-jre'
    implementation "org.postgresql:postgresql:$POSTGRES_VERSION"

    testImplementation 'com.h2database:h2'

    implementation "org.flywaydb:flyway-core:$FLYWAY_VERSION"
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-dbunit-test:5.2.1'

    implementation "com.pinterest.ktlint:ktlint-core:$KTLINT_CORE_VERSION"
    ktlint "com.github.shyiko:ktlint:$KTLINT_VERSION"

    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter:5.4.2"

    // doma
    implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.1'
    implementation 'org.seasar.doma:doma:2.24.0'
    kapt("org.seasar.doma:doma:2.24.0")
}

configurations.all {
    exclude group: 'junit', module: 'junit'
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

task formatAndKtlint(type: JavaExec, group: "kotlin Formatting") {
    description = 'Fix Kotlin code style deviations.'
    main = 'com.github.shyiko.ktlint.Main'
    // adding compiled classes to the classpath so that ktlint would validate project's sources
    // using its own ruleset (in other words to dogfood)
    classpath = configurations.ktlint + sourceSets.main.output
    args '--debug', '--format', 'src/**/*.kt'
}

task ktlint(type: JavaExec, group: "kotlin verification") {
    description = 'Check Kotlin code style.'
    main = 'com.github.shyiko.ktlint.Main'
    // adding compiled classes to the classpath so that ktlint would validate project's sources
    // using its own ruleset (in other words to dogfood)
    classpath = configurations.ktlint + sourceSets.main.output
    args 'src/**/*.kt'
}

task copyDomaResources(type: Sync) {
    from sourceSets.main.resources.srcDirs
    into compileKotlin.destinationDir
    include 'doma.compile.config'
    include 'META-INF/**/*.sql'
    include 'META-INF/**/*.script'
}

compileKotlin {
    dependsOn copyDomaResources
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

bootRun {
    if ( project.hasProperty('personal') ) {
        bootRun.systemProperties["spring.profiles.active"] = "personal"
    }
}

// front 側の build
task npmInstall(type: Exec, group: "front build", description: "npm install") {
    workingDir 'front'
    commandLine 'npm', 'install'
}

task buildFront(type: Exec, group: "front build", description: "npm run build") {
    workingDir 'front'
    commandLine 'npm', 'run', 'build'
}

task lintFront(type: Exec, group: "front build", description: "npm run lint") {
    workingDir 'front'
    commandLine 'npm', 'run', 'lint'
}

task testFront(type: Exec, group: "front build", description: "npm run test") {
    workingDir 'front'
    commandLine 'npm', 'run', 'test'
}

processResources.dependsOn buildFront

// Java クラスと SQL ファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
// コンパイルの前に SQL ファイルを出力先ディレクトリにコピーする
compileJava.dependsOn processResources

idea.module.inheritOutputDirs = true

// リソースファイルの出力先設定
kapt {
    arguments {
        arg("doma.resources.dir", compileKotlin.destinationDir)
    }
}

// CI の report 用
jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
    }
}
